import Database from "better-sqlite3";
import path from "path";

const dbPath = path.join(process.cwd(), "database.sqlite");
const db = new Database(dbPath);

console.log("üîÑ Migrando banco de dados: adicionando colunas active, boss, effectId e description...\n");

try {
  // Verificar se as colunas j√° existem
  const tableInfo = db.pragma("table_info(digimons)");
  const columnNames = tableInfo.map((col: { name: string }) => col.name);

  // Adicionar coluna 'active' se n√£o existir
  if (!columnNames.includes("active")) {
    console.log("‚ûï Adicionando coluna 'active'...");
    db.exec("ALTER TABLE digimons ADD COLUMN active INTEGER DEFAULT 1");
    console.log("‚úÖ Coluna 'active' adicionada");
  } else {
    console.log("‚è≠Ô∏è  Coluna 'active' j√° existe");
  }

  // Adicionar coluna 'boss' se n√£o existir
  if (!columnNames.includes("boss")) {
    console.log("‚ûï Adicionando coluna 'boss'...");
    db.exec("ALTER TABLE digimons ADD COLUMN boss INTEGER DEFAULT 0");
    console.log("‚úÖ Coluna 'boss' adicionada");
  } else {
    console.log("‚è≠Ô∏è  Coluna 'boss' j√° existe");
  }

  // Adicionar coluna 'effectId' se n√£o existir
  if (!columnNames.includes("effectId")) {
    console.log("‚ûï Adicionando coluna 'effectId'...");
    db.exec("ALTER TABLE digimons ADD COLUMN effectId INTEGER");
    console.log("‚úÖ Coluna 'effectId' adicionada");
  } else {
    console.log("‚è≠Ô∏è  Coluna 'effectId' j√° existe");
  }

  // Adicionar coluna 'description' se n√£o existir
  if (!columnNames.includes("description")) {
    console.log("‚ûï Adicionando coluna 'description'...");
    db.exec("ALTER TABLE digimons ADD COLUMN description TEXT DEFAULT ''");
    console.log("‚úÖ Coluna 'description' adicionada");
  } else {
    console.log("‚è≠Ô∏è  Coluna 'description' j√° existe");
  }

  console.log("\n‚úÖ Migra√ß√£o conclu√≠da com sucesso!");
} catch (error) {
  console.error("‚ùå Erro na migra√ß√£o:", error);
  process.exit(1);
} finally {
  db.close();
}

